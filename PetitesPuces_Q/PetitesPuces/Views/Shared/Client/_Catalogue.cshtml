@using PetitesPuces.Models
@using PetitesPuces.Utilities
@model CatalogueViewModel

@{
    Layout = null;
}
<style>
    #backTop {
        display: none;
        position: fixed;
        bottom: 20px;
        right: 30px;
        font-size: 18px;
        border: none;
        outline: none;
        background-color: lightskyblue;
        color: white;
        cursor: pointer;
        padding: 15px;
        opacity: 0.5;
        border-radius: 4px;
    }

    #backTop:hover {
        opacity: 0.9;
    }
</style>

<div class="row">

    <div id="filters" class="col-lg-2" style="border-right: 1px solid #d0c9c9; ">
        <div style="">
            <div class="item">
                <div class="panel-footer"><h4>Recherche :</h4></div>
                <div class="panel-body">
                    <input class="form-control" value="@ViewBag.Filtre" style="width: 100%" type="text" id="tbRecherche" onchange="filtrerListe()">

                    <div class="row">&nbsp;&nbsp;&nbsp;Par:
                        Nom <input type="checkbox" name="Nom"/>
                        Description <input type="checkbox"/>
                    </div>
                </div>
                    
                <div class="panel-footer"><h4>Tri :</h4></div>
                <div class="panel-body">
                    <select id="Tri" class="form-control" onchange="updateTri()">
                        @foreach (Enum tri in  Enum.GetValues(typeof(Tri)))
                        {
                            <option value="@tri">@tri.GetDisplayName()</option>
                        }
                    </select>

                    <p>Nombre d'items par page : </p>
                    <div class="nbItems">
                        <select id="ddlNbItems" onchange="updateNbItems()">
                            @for (int i = 4; i <= 40; i += 4)
                            {
                                if (@ViewBag.NbItems == i)
                                {
                                    <option selected value="@i">@i</option>
                                }
                                else
                                {
                                    <option value="@i">@i</option>
                                }
                            }
                            @if (@ViewBag.NbItems == -1)
                            {
                                <option selected value="-1">Tous</option>
                            }
                            else
                            {
                                <option value="-1">Tous</option>
                            }
                        </select>
                    </div>
                </div>
                    
                <div class="panel-footer">
                    <h4>Catégories :</h4>
                </div>
                <div class="panel-body" style="height: 40vh; overflow: auto;">
                    @if (Model.Vendeur.NoVendeur == -1)
                    {
                        <p><a class="categorie" onclick="selectCategorie(@Model.Vendeur.NoVendeur, -1)" id="-1">Tous (@Model.Categories.Sum(c => c.PPProduits.Count))</a></p>
                        foreach (PPCategory category in @Model.Categories)
                        {
                            var nb = category.PPProduits.Count;
                            if (nb > 0)
                            {
                                <p><a class="categorie" onclick="selectCategorie(@Model.Vendeur.NoVendeur, this)" id="@category.NoCategorie">@category.Description (@nb)</a></p>
                            }
                        }

                    }
                    else
                    {
                        <p><a class="categorie" onclick="selectCategorie(@Model.Vendeur.NoVendeur,-1)" id="-1">Tous (@Model.Vendeur.PPProduits.Count)</a></p>   
                        foreach (PPCategory category in @Model.Categories)
                        {
                            var nb = Model.Vendeur.PPProduits.Count(c => c.PPCategory == category);
                            if (nb > 0)
                            {
                                <p><a class="categorie" onclick="selectCategorie(@Model.Vendeur.NoVendeur,this)" id="@category.NoCategorie">@category.Description (@nb)</a></p>
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-10">
        @if (ViewBag.NbPage > 1)
        {
            @Html.Partial("_Pagination")
        }
        <div class="row">
            @if (@Model.Categorie == null)
            {
                <h3>&nbsp;&nbsp; Tous les produits</h3>
            }
            else
            {
                <h3>&nbsp;&nbsp; @Model.Categorie.Description</h3>
            }
            @if (Model.Produits.Count > 0)
            {
                foreach (PPProduit produit in Model.Produits)
                {
                    @Html.Partial("Client/_Produits", produit)
                }
            }
            else
            {
                <br/>
                <div class="col-lg-10 col-lg-offset-1 alert alert-warning" role="alert">
                    Il n'y a aucun produit à afficher
                </div>
            }
        </div>
        @if (ViewBag.NbPage > 1)
        {
            @Html.Partial("_Pagination")
        }
    </div>
</div>
<button onclick="topFunction()" id="backTop" title="Remonter au haut de la page"><span class="glyphicon glyphicon-menu-up"></span></button>
<!-- Modal confirmation ajout panier-->
<div class="modal fade" id="confirmationAjoutPanier" tabindex="-1" role="dialog" aria-labelledby="confirmationAjoutPanier">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                Confirmation
            </div>
            <div class="modal-body">
                <h4>Le produit a été ajouté avec succès à votre panier</h4>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
            </div>
        </div>
    </div>
</div>
<script>
    window.addEventListener("load",function(){
        $('#Vendeur'+@Model.Vendeur.NoVendeur).first().addClass("Current");
        $("div.nbItems select").val("@ViewBag.NbItems");
    },false);
    //gerer la recherche
    function filtrerListe(elem) {
        console.log("recherche")
        var value = $('#tbRecherche').val();
        var NoVendeur=@Model.Vendeur.NoVendeur;
        var NoCategorie = @ViewBag.NoCategorie;
        var NbItems = @ViewBag.NbItems;
        var NoPage = 1;
        updateListeProduits(NoVendeur, NoCategorie,NbItems,NoPage, value);
    }
    //gerer le changement de Tri
    function updateTri() {
        
    }
    //gérer les clicks de categories
     
    function selectCategorie(noVendeur,elem) {
        var id = $(elem).attr("id");
        updateListeProduits(noVendeur, id);
    }
    //gerer le changement de page avec le pager
    function changePage(elem) {
        var id = $(elem).attr("id");
        var NoVendeur=@Model.Vendeur.NoVendeur;
        var NoCategorie = @ViewBag.NoCategorie;
        updateListeProduits(NoVendeur, NoCategorie,@ViewBag.NbItems,id);
    }
    function previousPage() {
        var NoVendeur=@Model.Vendeur.NoVendeur;
        var NoCategorie = @ViewBag.NoCategorie;
        updateListeProduits(NoVendeur, NoCategorie,@ViewBag.NbItems,@ViewBag.NoPage === 1?1:@ViewBag.NoPage-1);
    }
    function nextPage() {
        var NoVendeur=@Model.Vendeur.NoVendeur;
        var NoCategorie = @ViewBag.NoCategorie;
        updateListeProduits(NoVendeur, NoCategorie,@ViewBag.NbItems,@ViewBag.NoPage === @ViewBag.NbPage?@ViewBag.NoPage:@ViewBag.NoPage+1);
    }
    //gerer le chamgement de nb d'items par page
    function updateNbItems() {
        var elem = document.getElementById("ddlNbItems");
        var nb = elem.options[elem.selectedIndex].value;
        
        var NoVendeur=@Model.Vendeur.NoVendeur;
        var NoCategorie = @ViewBag.NoCategorie;
        console.log(NoCategorie)
        var NoPage = 1;

        updateListeProduits(NoVendeur,NoCategorie,nb,NoPage);
    }
    /**
     * Update les produits selon le vendeur selectionner
     */
    function updateListeProduits(NoVendeur, NoCategorie, nbItems=@ViewBag.NbItems, noPage=1, filtre = "") {
        $.ajax({
            url: URLPATH+"/Client/ListeProduits",
            type: "get",
            data: { 
                "Vendeur": NoVendeur,
                "Categorie": NoCategorie,
                "Page":noPage,
                "Size":nbItems,
                "Filtre":filtre
            },
            success: function (result) {
                $("#partialListeProduits").html(result);
            },
            error: function (req, status, err) {
                $("#partialListeProduits").html("@Html.Partial("_ErrorAlert")");
            }
        });
        $('.Current').removeClass("Current");
        $("#Vendeur"+NoVendeur).first().addClass("Current");
        
        /**border border-primary
         * changer le url sans refresh
         */
        var PARAMS = "";
        PARAMS += NoVendeur ? "?Vendeur="+NoVendeur : "?Vendeur=-1";
        PARAMS += NoCategorie !== 1 ? "&Categorie="+NoCategorie : "";
        PARAMS += noPage ? "&Page="+noPage : "";
        PARAMS += nbItems ? "&Size="+nbItems : "";
        PARAMS += filtre ? "&Filtre="+filtre : "";
        var objParams = {
            Vendeur:NoVendeur,
            Categorie:NoCategorie,
            Page:noPage,
            Size:nbItems,
            Filtre:filtre
        }
        history.pushState(objParams, "", PARAMS);
    }
    //remplir le div template pour le modal de visualiser un produit
    function visualiser(noProduit) {
        $.ajax({
            url: URLPATH+"/Client/InformationProduit",
            type: "get",
            data: { 
                "NoProduit": noProduit
            },
            success: function (result) {
                $("#PLACEHOLDERModalDescription").html(result);
            },
            error: function (req, status, err) {
                $("#PLACEHOLDERModalDescription").html("@Html.Partial("_ErrorAlert")");
            }
        });
    }
    //ajouter un item au produit
    function ajouterAuPanier(noProduit, quantite = 1) {
        $.ajax({
            url: URLPATH + "/Client/AjouterProduitAuPanier",
            type: "post",
            data: {
                "NoProduit": noProduit,
                "Quantite": quantite
            },
            success: function(result) {
                $('#confirmationAjoutPanier').modal('show'); 
            },
            error: function(req, status, err) {
                alert("Une erreure est survenue")
            }
        });
    }
    //augmeneter la quantite
    function plusQuantite(id) {
        $("#" + id).val(parseInt($("#" + id).val()) + 1);
    }
    //diminuer la quantite
    function moinsQuantite(id) {
        if ($("#" + id).val() >= 1)
            $("#" + id).val(parseInt($("#" + id).val()) - 1);
    }
    //Quand scroll, afficher le button pour remonter en haut
    window.onscroll = function() {scrollFunction()};

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("backTop").style.display = "block";
        } else {
            document.getElementById("backTop").style.display = "none";
        }
    }

    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
</script>