@model PetitesPuces.ViewModels.Vendeur.ModiProfilVendeur
@{
    ViewBag.Title = "Profil";
}

<div class="jumbotron">
    <div class="container">
        <h1>Mon Profil</h1>
    </div>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false, "", new {@class = "text-danger"})
    <div class="container">
        <div class="form-row">
            <div class="form-group col-md-6">

                @Html.LabelFor(model => model.Prenom, htmlAttributes: new {@class = ""})
                @Html.EditorFor(model => model.Prenom, new {htmlAttributes = new {@class = "form-control", @PlaceHolder = "Prenom"}})

            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Nom, htmlAttributes: new {@class = ""})
                @Html.EditorFor(model => model.Nom, new {htmlAttributes = new {@class = "form-control", @PlaceHolder = "Nom"}})
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.NomAffaires, htmlAttributes: new {@class = ""})
                @Html.EditorFor(model => model.NomAffaires, new {htmlAttributes = new {@class = "form-control", @PlaceHolder = "Nom d'affaires"}})
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Rue, htmlAttributes: new {@class = ""})
                @Html.EditorFor(model => model.Rue, new {htmlAttributes = new {@class = "form-control", @PlaceHolder = "Rue"}})
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Ville, htmlAttributes: new {@class = ""})
                @Html.EditorFor(model => model.Ville, new {htmlAttributes = new {@class = "form-control", @PlaceHolder = "Ville"}})

            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Province, htmlAttributes: new {@class = ""})
                @Html.DropDownListFor(model => model.Province, new List<SelectListItem>()
                {
                    new SelectListItem() {Text = "Choisir votre province", Value = ""},
                    new SelectListItem() {Text = "Québec", Value = "QC"},
                    new SelectListItem() {Text = "Ontario", Value = "ON"},
                    new SelectListItem() {Text = "Alberta", Value = "AB"},
                    new SelectListItem() {Text = "Colombie-Britanique", Value = "BC"},
                    new SelectListItem() {Text = "Île-du-prince-Édouard", Value = "PE"},
                    new SelectListItem() {Text = "Manitoba", Value = "MB"},
                    new SelectListItem() {Text = "Nouveau-Brunswick", Value = "NB"},
                    new SelectListItem() {Text = "Nouvelle-Écosse", Value = "NS"},
                    new SelectListItem() {Text = "Saskatchewan", Value = "SK"},
                    new SelectListItem() {Text = "Terre-Neuve-et-Labrador", Value = "NL"},
                    new SelectListItem() {Text = "Nunavut", Value = "NU"},
                    new SelectListItem() {Text = "Territoires du Nord-Ouest", Value = "NT"},
                    new SelectListItem() {Text = "Yukon", Value = "YT"},
                }, new {@class = "form-control text-primary"})

            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.CodePostal, htmlAttributes: new {@class = ""})
                @Html.EditorFor(model => model.CodePostal, new {htmlAttributes = new {@class = "form-control", @PlaceHolder = "CodePostal"}})
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Pays, htmlAttributes: new {@class = ""})
                @Html.EditorFor(model => model.Pays, new {htmlAttributes = new {@class = "form-control", @PlaceHolder = "Pays"}})
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Tel1, htmlAttributes: new {@class = ""})
                    @Html.EditorFor(model => model.Tel1, new {htmlAttributes = new {@class = "form-control", @PlaceHolder = "Numéro téléphone 1 (999-999-9999)"}})
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Tel2, htmlAttributes: new {@class = ""})
                    @Html.EditorFor(model => model.Tel2, new {htmlAttributes = new {@class = "form-control", @PlaceHolder = "Numéro téléphone 2 (999-999-9999)"}})
                </div>

            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.PoidsMaxLivraison, htmlAttributes: new {@class = ""})
                    @Html.EditorFor(model => model.PoidsMaxLivraison, new {htmlAttributes = new {@class = "form-control", @PlaceHolder = "Poids max pour la livraison"}})
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.LivraisonGratuite, htmlAttributes: new {@class = ""})
                    @Html.EditorFor(model => model.LivraisonGratuite, new {htmlAttributes = new {@class = "form-control", @PlaceHolder = "Montant min pour livraison graduit"}})

                </div>

            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Taxes, htmlAttributes: new {@class = ""})
                    @Html.DropDownListFor(model => model.Taxes, new List<SelectListItem>()
                    {
                        new SelectListItem() {Text = "Oui", Value = "true"},
                        new SelectListItem() {Text = "Non", Value = "false"}
                    }, new {@class = "form-control text-primary"})
                </div>
                
                <div class="form-group col-md-2 colorpicker-component">
                    <label for="backgroundcolor">Couleur de fond</label>
                    <input type="color" id="backgroundcolor" name="backgroundcolor" value="@Model.configuration.Split(';')[1].Split(':')[1]" class="colorpicker-component form-control">
                </div>
                <div class="form-group col-md-2">
                    <label for="couleurText">Couleur de text</label>
                    <input type="color" id="couleurText" name="couleurText" class="colorpicker-component 
                        form-control" value="@Model.configuration.Split(';')[0].Split(':')[1]">
                </div>
                <div class="form-group col-md-2">
                    <label for="fontText">Police</label>
                    <select id="fontText" name="fontText" class="form-control text-primary">
                        <option value="" selected disabled hidden>    @Model.configuration.Split(';')[2].Split(':')[1]</option>
                    
                        <option value="Arial">Arial</option>
                        <option value="Times New Roman">Times New Roman</option>
                        <option value="Georgia">Georgia</option>
                        <option value="Verdana">Verdana</option>
                        <option value="Courier New">Courier New</option>
                        <option value="Lucida Console">Lucida Console</option>
                    </select>

                </div>@**@
            </div>
          
            <div class="form-row">
              
                <div class="col-xs-6 form-group col-xs-offset-4">
                    <br/> 
                    <input type="submit" class="btn btn-lg btn-info " value="Modifier"/> &nbsp;
                    @Html.ActionLink("Retour", "Index", "Vendeur", new {@class = "btn btn-lg btn-danger"})&nbsp;
                    @Html.ActionLink("Changer mot de passe", "modificationMDP", "vendeur", new {@class = "btn btn-sm btn-primary"})

                </div>

            </div>
        </div>
    </div>
}